#!/usr/bin/env node
'use strict';

var util = require('../lib/util');
var description = 'Generate JavaScript code from WebIDL definitions.';

var js = require('../lib/js');
var o = 29;
var w = 74;

var program = util.program(exports, description)
  .usage('[options] <idl ...>')
  .option('--match <regex>',
    'Match WebIDL definition names',
    regex)
  .option('--replace <replacement>', util.wrap(
    'Replace any WebIDL definition names matched with --match', o, w))
  .option('--only <names>', util.wrap(
    'Only process WebIDL definitions with the given names', o, w),
    list)
  .option('--skip <names>',
    'Skip WebIDL definitions with the given names',
    list)
  .option('--flow-types-in-comments',
    'Include Flow types in comments (default)',
    true)
  .option('--no-flow-types-in-comments',
    'Do not include Flow types in comments')
  .option('--jsdoc',
    'Include JSDoc comments (default)',
    true)
  .option('--no-jsdoc',
    'Do not include JSDoc comments')
  .option('-o, --out <file>', util.wrap(
    'File to write JavaScript code to (defaults to ./definitions.js)', o, w),
    'definitions.js');

function list(str) {
  return str.split(',');
}

function regex(str) {
  return new RegExp(str);
}

if (require.main === module) {
  program.parse(process.argv);
  js(program.args, program);
}
