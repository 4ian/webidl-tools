enum <%- enumName(node) %> {
<%_ node.values.forEach((value, i) => { _%>
<%- '  ' + toEnumName(node.name, value) + (i < node.values.length - 1 ? ',' : '') %>
<%_ }) _%>
};

template <>
struct Convert<<%- enumName(node) %>, std::string> {
  static Either<std::string, <%- enumName(node) %>> From(std::string value);

  static std::string To(<%- enumName(node) %> value);
};

template <>
struct Convert<<%- enumName(node) %>, v8::Local<v8::Value>> {
  static Either<std::string, <%- enumName(node) %>> From(v8::Local<v8::Value> value);

  static v8::Local<v8::Value> To(<%- enumName(node) %> value);
};
