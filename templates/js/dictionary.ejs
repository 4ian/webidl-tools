function validate<%= node.name %>(unvalidated /* : any */) /* : <%= node.name %> */ {
  if (typeof unvalidated !== 'object') {
    throw new TypeError('<%= node.name %> must be an object');
  }

  var validated = {};

<% node.members.forEach(member => { -%>
<% if (member.required) { -%>
  if (!('<%= member.name %>' in unvalidated)) {
    throw new TypeError('<%= member.name %> is required');
  }

  validated['<%= member.name %>'] = makeValidator(<%- include({ idlType: member.idlType, template: './validate.ejs' }) %>)(unvalidated['<%= member.name %>']);
<% } else { -%>
  if ('<%= member.name %>' in unvalidated) {
    validated['<%= member.name %>'] = makeValidator(<%- include({ idlType: member.idlType, template: './validate.ejs' }) %>)(unvalidated['<%= member.name %>']);
<% if (member.default && 'value' in member.default) { -%>
  } else {
    validated['<%= member.name %>'] = <%- include({ member: member, template: './default.ejs' }) -%>;
  }
<% } else {-%>
  }
<% } -%>
<% } -%>

<% }); -%>
  return validated;
}

exports.validate<%= node.name %> = validate<%= node.name %>;
