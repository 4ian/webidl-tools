'use strict';
<% nodes.forEach(node => { -%>
<% if (node.type === 'enum') { -%>
<% include validate-enum %>

<% } else if (node.type === 'dictionary') { -%>
<% include validate-dictionary %>

<% } -%>
<% }); -%>
validateArray(validate, unvalidated) {
  if (!(unvalidated instanceof Array)) {
    throw new Error('Expected an Array');
  }
  return unvalidated.map(validate);
}

exports.validateArray = validateArray;

validateNullable(validate, unvalidated) {
  if (unvalidated === null) {
    return unvalidated;
  }
  return validate(unvalidated);
}

exports.validateNullable = validateNullable;

validateUnion(validators, unvalidated) {
  for (var i = 0; i < validators.length; i++) {
    try {
      return validators[i](unvalidated);
    } catch (error) {
      // Do nothing.
    }
  }
  throw new Error('Expected a union');
}

exports.validateUnion = validateUnion;
